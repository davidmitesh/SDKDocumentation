{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to HamroPatro Mini-app service JS SDK Link to sample app . Introduction to Hamropatro Mini Apps Hamropatro Mini Apps are apps which combine the functionality of native apps to the flexibility of mobile websites. They are essentially web applications opened inside the Hamropatro App whose functionality is enhanced via inbuilt JS APIs, effectively meaning your app despite being developed as a web app can still enjoy all the benefits of a native app when being listed as a Mini Apps inside Hamropatro App.The high audience reach of hamropatro mobile application will take your web application reach to greater audience.With almost no hassle involved in building a mobile application in its entirety,saving costs in advertising and marketing,and saving your users from downloading a separate application, Hamropatro mini app platform is the best place you can search for hosting your web applications.","title":"Get Started"},{"location":"#welcome-to-hamropatro-mini-app-service-js-sdk","text":"Link to sample app .","title":"Welcome to HamroPatro Mini-app service JS SDK"},{"location":"#introduction-to-hamropatro-mini-apps","text":"Hamropatro Mini Apps are apps which combine the functionality of native apps to the flexibility of mobile websites. They are essentially web applications opened inside the Hamropatro App whose functionality is enhanced via inbuilt JS APIs, effectively meaning your app despite being developed as a web app can still enjoy all the benefits of a native app when being listed as a Mini Apps inside Hamropatro App.The high audience reach of hamropatro mobile application will take your web application reach to greater audience.With almost no hassle involved in building a mobile application in its entirety,saving costs in advertising and marketing,and saving your users from downloading a separate application, Hamropatro mini app platform is the best place you can search for hosting your web applications.","title":"Introduction to Hamropatro Mini Apps"},{"location":"backendjs/","text":"Inside the back-end js sdk hamro_service_message_sdk.sendNotification() method : This method is used to send service message to hamropatro server. Response: < Promise > (For details, see example below) Example: require('dotenv').config() const {sendNotification}=require('hamro_service_message_sdk') // Other server code let ServiceMessageObject={ templateName: \"order_confirmed\", //Required field serviceMessageId : \"8KAghgbJXYkVgFCfeAYe6zI2\",//Required field miniAppUserId: <Insert the miniapp id provided during onboarding> //Required field data:{ details: { \"order_no\":\"1\", }, buttons: { \"view_order\":\"https://google.com\" }, carousel: { size:1, items:[{ \"name\": \"test image\", \"url\": \"https://www.youtube.com/watch?v=9em32dDnTck\", \"itemType\": \"VIDEO\", \"thumbnail\": \"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARXG6iIyigPEV4NjH8DCrGvK=s96-c\", \"caption\": \"test image\", \"deeplink\": \"https://www.google.com\", \"aspectRatio\": 1.777778, }], }, text:\"This is Lorem Epsum text\", }, } let details=await sendNotification(ServiceMessageObject) console.log(details) /* For success: ------------ {wrappers_: null, arrayIndexOffset_: -1, array: Array(0), pivot_: 1.7976931348623157e+308, convertedPrimitiveFields_: {\u2026}} For error: ---------- throws err. So, be sure to catch it. */","title":"Inside back-end js sdk"},{"location":"backendjs/#inside-the-back-end-js-sdk","text":"","title":"Inside the back-end js sdk"},{"location":"backendjs/#hamro_service_message_sdksendnotification-method","text":"This method is used to send service message to hamropatro server. Response: < Promise > (For details, see example below) Example: require('dotenv').config() const {sendNotification}=require('hamro_service_message_sdk') // Other server code let ServiceMessageObject={ templateName: \"order_confirmed\", //Required field serviceMessageId : \"8KAghgbJXYkVgFCfeAYe6zI2\",//Required field miniAppUserId: <Insert the miniapp id provided during onboarding> //Required field data:{ details: { \"order_no\":\"1\", }, buttons: { \"view_order\":\"https://google.com\" }, carousel: { size:1, items:[{ \"name\": \"test image\", \"url\": \"https://www.youtube.com/watch?v=9em32dDnTck\", \"itemType\": \"VIDEO\", \"thumbnail\": \"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARXG6iIyigPEV4NjH8DCrGvK=s96-c\", \"caption\": \"test image\", \"deeplink\": \"https://www.google.com\", \"aspectRatio\": 1.777778, }], }, text:\"This is Lorem Epsum text\", }, } let details=await sendNotification(ServiceMessageObject) console.log(details) /* For success: ------------ {wrappers_: null, arrayIndexOffset_: -1, array: Array(0), pivot_: 1.7976931348623157e+308, convertedPrimitiveFields_: {\u2026}} For error: ---------- throws err. So, be sure to catch it. */","title":"hamro_service_message_sdk.sendNotification() method:"},{"location":"errors/","text":"Error messages for front-end js sdk MINI_APP_NOT_FOUND { name:\"MiniAppNotFound\", message:\"The requested mini app not found.\", code:\"1\" } SERVER_ERROR { name:\"ServerError\", message:\"Internal Server Error.\", code:\"2\" } UNKNOWN_ERROR { name:\"UnknownError\", message:\"Something went wrong.\", code:\"3\" } NO_CONSENT_ERROR { name:\"NoConsentError\", message:\"User denied to share the information.\", code:\"4\" } USER_NOT_LOGGED_IN_ERROR { name:\"UserNotLoggedInError\", message:\"User has not logged in.\", code:\"5\" } LOGIN_CANCELLED_ERROR { name:\"LoginCancelledError\", message:\"User cancel the login request.\", code:\"6\" } ACCESS_TOKEN_EXCEPTION { name:\"AccessTokenException\", message:\"Unable to fetch access token.\", code:\"7\" } UNAUTHORIZED_DOMAIN { name:\"UnauthorizedDomain\", message:\"Miniapp not authorized in this url.\", code:\"8\" } NOT_IMPLEMENTED_ERROR { name:\"NotImplementedError\", message:\"Method not implemented error.\", code:\"9\" } RESULT_NOT_IMPLEMENTED_ERROR { name:\"ResultNotImplementedError\", message:\"Result doesnot match callback method\", code:\"10\" } NETWORK_ERROR { name:\"NetworkError\", message:\"Notwork not available.\", code:\"11\" } SUSPENDED_MINI_APP { name:\"SuspendedMiniApp\", message:\"Miniapp is suspended\", code:\"12\" } MINI_APP_NOT_INITIALIZED { name:\"MiniAppNotInitialized\", message:\"Miniapp is not initialized\", code:\"12\" } INITIALIZATION_ERROR { name:\"Initialization error\", message:\"Problem during initialization\", code:'13' } LOGOUT_ERROR { name:\"Logout error\", message:\"Problem during logout\", code:'14' } SESSION_EXPIRED { name:\"Session expired\", message:\"Login again to continue\", code:'15' }","title":"Error messages and codes"},{"location":"errors/#error-messages-for-front-end-js-sdk","text":"","title":"Error messages for front-end js sdk"},{"location":"errors/#mini_app_not_found","text":"{ name:\"MiniAppNotFound\", message:\"The requested mini app not found.\", code:\"1\" }","title":"MINI_APP_NOT_FOUND"},{"location":"errors/#server_error","text":"{ name:\"ServerError\", message:\"Internal Server Error.\", code:\"2\" }","title":"SERVER_ERROR"},{"location":"errors/#unknown_error","text":"{ name:\"UnknownError\", message:\"Something went wrong.\", code:\"3\" }","title":"UNKNOWN_ERROR"},{"location":"errors/#no_consent_error","text":"{ name:\"NoConsentError\", message:\"User denied to share the information.\", code:\"4\" }","title":"NO_CONSENT_ERROR"},{"location":"errors/#user_not_logged_in_error","text":"{ name:\"UserNotLoggedInError\", message:\"User has not logged in.\", code:\"5\" }","title":"USER_NOT_LOGGED_IN_ERROR"},{"location":"errors/#login_cancelled_error","text":"{ name:\"LoginCancelledError\", message:\"User cancel the login request.\", code:\"6\" }","title":"LOGIN_CANCELLED_ERROR"},{"location":"errors/#access_token_exception","text":"{ name:\"AccessTokenException\", message:\"Unable to fetch access token.\", code:\"7\" }","title":"ACCESS_TOKEN_EXCEPTION"},{"location":"errors/#unauthorized_domain","text":"{ name:\"UnauthorizedDomain\", message:\"Miniapp not authorized in this url.\", code:\"8\" }","title":"UNAUTHORIZED_DOMAIN"},{"location":"errors/#not_implemented_error","text":"{ name:\"NotImplementedError\", message:\"Method not implemented error.\", code:\"9\" }","title":"NOT_IMPLEMENTED_ERROR"},{"location":"errors/#result_not_implemented_error","text":"{ name:\"ResultNotImplementedError\", message:\"Result doesnot match callback method\", code:\"10\" }","title":"RESULT_NOT_IMPLEMENTED_ERROR"},{"location":"errors/#network_error","text":"{ name:\"NetworkError\", message:\"Notwork not available.\", code:\"11\" }","title":"NETWORK_ERROR"},{"location":"errors/#suspended_mini_app","text":"{ name:\"SuspendedMiniApp\", message:\"Miniapp is suspended\", code:\"12\" }","title":"SUSPENDED_MINI_APP"},{"location":"errors/#mini_app_not_initialized","text":"{ name:\"MiniAppNotInitialized\", message:\"Miniapp is not initialized\", code:\"12\" }","title":"MINI_APP_NOT_INITIALIZED"},{"location":"errors/#initialization_error","text":"{ name:\"Initialization error\", message:\"Problem during initialization\", code:'13' }","title":"INITIALIZATION_ERROR"},{"location":"errors/#logout_error","text":"{ name:\"Logout error\", message:\"Problem during logout\", code:'14' }","title":"LOGOUT_ERROR"},{"location":"errors/#session_expired","text":"{ name:\"Session expired\", message:\"Login again to continue\", code:'15' }","title":"SESSION_EXPIRED"},{"location":"frontendjs/","text":"Inside the front-end js sdk hamromini_sdkjs.MiniApp() class : An instance of this class should be created in order to use various methods inside the sdk. let miniapp = hamromini_sdkjs.MiniApp() #creating the instance of class MiniApp() hamromini_sdkjs.initialize(MINI_APP_ID,miniapp_instance) : An initializer to be called in the root javascript file of the project. Parameters: Name Type Description MINI_APP_ID String Miniapp id provided by the hamropatro team miniapp_instance MiniApp() instance Instance of miniapp created using hamromini_sdkjs.MiniApp() class Response: < Promise > (For details, see example below) Example: let userDetails=await hamromini_sdkjs.initialize(CLIENT_ID,miniapp); console.log(userDetails) //If user is already logged in { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"}, \"host_version\":1 } // If user is not logged in {\"mini_app_id\":\"5483a540-c898-11eb-968a-0242ac120073\",\"host_version\":1} hamromini_sdkjs.MiniApp().login(provider) method : This methods logs user to hamropatro either by using his google or facebook account. Parameters: Name Type Description provider String can be either 'google' or 'facebook'. Note: While logging in from hamropatro mobile app, only google login is supported. Response: < Promise > (For details, see example below) Example: let userDetails=await miniapp.login(\"google\") console.log(userDetails) { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"} } Caution: This method resolves promise only in the mobile environment. For web,it takes to the login page of the provider( either google or facebook signin) and redirects back at the page where the method was called. In this case, response object can be resolved from initialize method of the sdk. You can understand the login flow with this sample project built using this sdk. Source code for the project is available at this repo . hamromini_sdkjs.MiniApp().getAccessToken() method : This method returns the access-token that can be used to send the service messages to hamropatro server. Response: < Promise > (For details, see example below) Example: let token=await miniapp.getAccessToken() console.log(token) \"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\" hamromini_sdkjs.MiniApp().getUserProfile() method : This method is used to get the user details if logged in. Returns error if attempted to call without login. Response: < Promise > (For details, see example below) Example: let profile=await miniapp.getUserProfile() console.log(profile) //if success { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"} } hamromini_sdkjs.MiniApp().isUserLoggedIn() method : This method is used to get the login status of the user. Response: < Promise > (For details, see example below) Example: console.log(await miniapp.isUserLoggedIn()) //returns Boolean ( true or false) //if user is logged in true hamromini_sdkjs.MiniApp().getPlatform() method : This method returns the platform the client web app is running at.It may return 'IOS','ANDROID' or 'BROWSER'. Response: 'IOS' || 'ANDROID' || 'BROWSER' Example: console.log(miniapp.getPlatform()) //returns String ( 'IOS' || 'ANDROID' || 'BROWSER') // 'BROWSER' hamromini_sdkjs.MiniApp().getSdkVersion() method : This method returns the sdk version number in use. Response: Integer(1 || 2 || ...) Example: console.log(miniapp.getSdkVersion()) // 1","title":"Inside frond-end js sdk"},{"location":"frontendjs/#inside-the-front-end-js-sdk","text":"","title":"Inside the front-end js sdk"},{"location":"frontendjs/#hamromini_sdkjsminiapp-class","text":"An instance of this class should be created in order to use various methods inside the sdk. let miniapp = hamromini_sdkjs.MiniApp() #creating the instance of class MiniApp()","title":"hamromini_sdkjs.MiniApp() class:"},{"location":"frontendjs/#hamromini_sdkjsinitializemini_app_idminiapp_instance","text":"An initializer to be called in the root javascript file of the project. Parameters: Name Type Description MINI_APP_ID String Miniapp id provided by the hamropatro team miniapp_instance MiniApp() instance Instance of miniapp created using hamromini_sdkjs.MiniApp() class Response: < Promise > (For details, see example below) Example: let userDetails=await hamromini_sdkjs.initialize(CLIENT_ID,miniapp); console.log(userDetails) //If user is already logged in { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"}, \"host_version\":1 } // If user is not logged in {\"mini_app_id\":\"5483a540-c898-11eb-968a-0242ac120073\",\"host_version\":1}","title":"hamromini_sdkjs.initialize(MINI_APP_ID,miniapp_instance):"},{"location":"frontendjs/#hamromini_sdkjsminiapploginprovider-method","text":"This methods logs user to hamropatro either by using his google or facebook account. Parameters: Name Type Description provider String can be either 'google' or 'facebook'. Note: While logging in from hamropatro mobile app, only google login is supported. Response: < Promise > (For details, see example below) Example: let userDetails=await miniapp.login(\"google\") console.log(userDetails) { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"} } Caution: This method resolves promise only in the mobile environment. For web,it takes to the login page of the provider( either google or facebook signin) and redirects back at the page where the method was called. In this case, response object can be resolved from initialize method of the sdk. You can understand the login flow with this sample project built using this sdk. Source code for the project is available at this repo .","title":"hamromini_sdkjs.MiniApp().login(provider) method:"},{"location":"frontendjs/#hamromini_sdkjsminiappgetaccesstoken-method","text":"This method returns the access-token that can be used to send the service messages to hamropatro server. Response: < Promise > (For details, see example below) Example: let token=await miniapp.getAccessToken() console.log(token) \"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\"","title":"hamromini_sdkjs.MiniApp().getAccessToken() method:"},{"location":"frontendjs/#hamromini_sdkjsminiappgetuserprofile-method","text":"This method is used to get the user details if logged in. Returns error if attempted to call without login. Response: < Promise > (For details, see example below) Example: let profile=await miniapp.getUserProfile() console.log(profile) //if success { \"mini_app_id\":\"5483a540-c391-11fb-968a-0242ac120073\", \"access_token\":\"eyJ0eXAipiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpaWtvOEtBZ2hnYkpYWWtWZ0ZDZmVBWWU2ekkyIiwicGhvbmVOdW1iZXIiOiIiLCJtaW5pQXBwSWQiOiI1NDgzYTU0MC1jMzkxLTExZWItOTY4YS0wMjQyYWMxMjAwNzMiLCJkaXNwbGF5TmFtZSI6Ik1pdGVzaCBQYW5kZXkiLCJhcHBJZCI6ImhhbXJvcGF0cm8tYW5kcm9pZCIsImlzcyI6Im1pbmktYXBwLXNlcnZpY2UiLCJwcm9maWxlSW1hZ2UiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQVRYQUp6eWFyLVRWd2c3aUpxNkFSWEc2aUl5aWdQRVY0TmpIOERDckd2Sz1zOTYtYyIsImV4cCI6MTYyMzc3MDI5NywiaWF0IjoxNjIzNzY2Njk3LCJlbWFpbCI6Im1wYW5kZXlAaGFtcm9wYXRyby5jb20ifQ.8VW-qIWQLqJ2BRF5TZnv2l6CSxgG3xS2ER2HxryXqKQ\", \"expires_in\":\"3600\", \"user_profile\":{ \"id\":\"iiko8KAghgdjXYkVgFCfeAYe6zI2\", \"display_name\":\"Lorem Epsum\", \"photo_url\":\"https://lh3.googleusercontent.com/a/AATXAJzyar-TVwg7iJq6ARsdsiIyigPEV4NjH8DCrGvK=s96-c\", \"email\":\"lorem@xyz.com\"} }","title":"hamromini_sdkjs.MiniApp().getUserProfile() method:"},{"location":"frontendjs/#hamromini_sdkjsminiappisuserloggedin-method","text":"This method is used to get the login status of the user. Response: < Promise > (For details, see example below) Example: console.log(await miniapp.isUserLoggedIn()) //returns Boolean ( true or false) //if user is logged in true","title":"hamromini_sdkjs.MiniApp().isUserLoggedIn() method:"},{"location":"frontendjs/#hamromini_sdkjsminiappgetplatform-method","text":"This method returns the platform the client web app is running at.It may return 'IOS','ANDROID' or 'BROWSER'. Response: 'IOS' || 'ANDROID' || 'BROWSER' Example: console.log(miniapp.getPlatform()) //returns String ( 'IOS' || 'ANDROID' || 'BROWSER') // 'BROWSER'","title":"hamromini_sdkjs.MiniApp().getPlatform() method:"},{"location":"frontendjs/#hamromini_sdkjsminiappgetsdkversion-method","text":"This method returns the sdk version number in use. Response: Integer(1 || 2 || ...) Example: console.log(miniapp.getSdkVersion()) // 1","title":"hamromini_sdkjs.MiniApp().getSdkVersion() method:"},{"location":"include_backend/","text":"Including back-end js sdk in your nodejs project npm i hamro_service_message_sdk --save const {sendNotification}=require('hamro_service_message_sdk') Create a file .env in the root project directory where index.js of nodejs server is hosted. The file format should be : MINI_APP_ID=**INSERT YOUR MINI-APP-ID HERE** MINI_APP_SECRET_KEY=**INSERT YOUR SECRET KEY HERE** MINI_APP_PUSH_KEY=**INSERT YOUR PUSH KEY HERE** GRPC_TARGET=**INSERT GRPC TARGET FOR HAMROPATRO SERVICE MESSAGE** After filling in the values, the file should look like: MINI_APP_ID=6caff600-b7ca-11eb-baa9-0242ac1200aa MINI_APP_SECRET_KEY=GK7zYe#GR#Rma@l6oYtWoqcoSD%RxkmFseiYFj0J3dlzzysGWAump!p%VM#e MINI_APP_PUSH_KEY=GK7zYe#GR#Rma@l6oYtWddccoSD%RxkmFseiYFj0J3dlzzysGWAump!p%VM#e ##This is dev Grpc target GRPC_TARGET=mini-app-grpc-dev.hamrostack.com","title":"Including back-end js sdk"},{"location":"include_backend/#including-back-end-js-sdk-in-your-nodejs-project","text":"npm i hamro_service_message_sdk --save const {sendNotification}=require('hamro_service_message_sdk') Create a file .env in the root project directory where index.js of nodejs server is hosted. The file format should be : MINI_APP_ID=**INSERT YOUR MINI-APP-ID HERE** MINI_APP_SECRET_KEY=**INSERT YOUR SECRET KEY HERE** MINI_APP_PUSH_KEY=**INSERT YOUR PUSH KEY HERE** GRPC_TARGET=**INSERT GRPC TARGET FOR HAMROPATRO SERVICE MESSAGE** After filling in the values, the file should look like: MINI_APP_ID=6caff600-b7ca-11eb-baa9-0242ac1200aa MINI_APP_SECRET_KEY=GK7zYe#GR#Rma@l6oYtWoqcoSD%RxkmFseiYFj0J3dlzzysGWAump!p%VM#e MINI_APP_PUSH_KEY=GK7zYe#GR#Rma@l6oYtWddccoSD%RxkmFseiYFj0J3dlzzysGWAump!p%VM#e ##This is dev Grpc target GRPC_TARGET=mini-app-grpc-dev.hamrostack.com","title":"Including back-end js sdk in your nodejs project"},{"location":"include_frontend/","text":"Including front-end js sdk in your project At index.html of the project,include the sdk by using script tag. For Development build: <script src=\"https://dev-dot-mini-app-js-sdk.dallas-hamrostack.com/main-1.1.js\"></script> For Production build: <script src=\"https://mini-app-sdk.hamropatro.com/main-1.1.js\"></script>","title":"Including front-end js sdk"},{"location":"include_frontend/#including-front-end-js-sdk-in-your-project","text":"At index.html of the project,include the sdk by using script tag. For Development build: <script src=\"https://dev-dot-mini-app-js-sdk.dallas-hamrostack.com/main-1.1.js\"></script> For Production build: <script src=\"https://mini-app-sdk.hamropatro.com/main-1.1.js\"></script>","title":"Including front-end js sdk in your project"}]}